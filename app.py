{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1jWQXQZS5VjG5b1fU-B9czYxhvVZmQYpW","authorship_tag":"ABX9TyNa4hVNNK7ClKt6bGjt/MWr"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":8,"metadata":{"id":"3lNu-ipswSd4","executionInfo":{"status":"ok","timestamp":1696994797657,"user_tz":-330,"elapsed":386,"user":{"displayName":"PORANKI RISHI VARSHA","userId":"03419463439847862009"}}},"outputs":[],"source":["from flask import Flask, render_template, request\n","import joblib\n","import pickle"]},{"cell_type":"code","source":["app = Flask(__name__)"],"metadata":{"id":"vOF18s_WwaJ-","executionInfo":{"status":"ok","timestamp":1696994543366,"user_tz":-330,"elapsed":686,"user":{"displayName":"PORANKI RISHI VARSHA","userId":"03419463439847862009"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["# Load the trained model\n","model = pickle.load(open('/content/drive/MyDrive/telecom churn project/trained_model.pkl','rb'))  # Change the filename to your model's file"],"metadata":{"id":"CxV8HETLwcq_","executionInfo":{"status":"ok","timestamp":1696995993449,"user_tz":-330,"elapsed":1761,"user":{"displayName":"PORANKI RISHI VARSHA","userId":"03419463439847862009"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["@app.route('/')\n","def index():\n","    return render_template('index.html')\n"],"metadata":{"id":"sSz_06hi1_hL","executionInfo":{"status":"ok","timestamp":1696996010480,"user_tz":-330,"elapsed":442,"user":{"displayName":"PORANKI RISHI VARSHA","userId":"03419463439847862009"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["@app.route('/predict', methods=['POST'])\n","def predict():\n","    # Extract customer details from the form\n","    state = request.form.get('state')\n","    account_length = float(request.form.get('account_length'))\n","    area_code = int(request.form.get('area_code'))  # Assuming area_code is an integer\n","    phone = request.form.get('phone')\n","    intl_plan = 1 if request.form.get('intl_plan') == 'yes' else 0\n","    vmail_plan = 1 if request.form.get('vmail_plan') == 'yes' else 0\n","    vmail_message = float(request.form.get('vmail_message'))\n","    day_mins = float(request.form.get('day_mins'))\n","\n","    # You can extract and preprocess other customer details as needed\n","\n","    # Preprocess the input data and make a prediction\n","    preprocessed_data = [[account_length, area_code, intl_plan, vmail_plan, vmail_message, day_mins]]\n","    prediction = model.predict(preprocessed_data)\n","\n","    # Display the prediction result\n","    result = \"Churn Prediction: Yes\" if prediction[0] == 1 else \"Churn Prediction: No\"\n","    return result\n","\n","if __name__ == '__main__':\n","    app.run(debug=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gWt5l7TT2DQA","outputId":"d0ff074e-82b1-4819-b870-dea5fa1ffa8d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":[" * Serving Flask app '__main__'\n"," * Debug mode: on\n"]},{"output_type":"stream","name":"stderr","text":["INFO:werkzeug:\u001b[31m\u001b[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.\u001b[0m\n"," * Running on http://127.0.0.1:5000\n","INFO:werkzeug:\u001b[33mPress CTRL+C to quit\u001b[0m\n","INFO:werkzeug: * Restarting with stat\n"]}]},{"cell_type":"code","source":["!python app.py"],"metadata":{"id":"KzQHm_Yn3wHZ"},"execution_count":null,"outputs":[]}]}